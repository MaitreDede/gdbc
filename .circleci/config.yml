version: 2.1

commands:
  build_driver:
    description: "package up a jdbc driver as a go sql driver"
    parameters:
      driver_name:
        type: string
      artifacts:
        type: string
        default: ""
    steps:
      - run: wrapper/scripts/wrap-<< parameters.driver_name >>.sh
      - persist_to_workspace:
          root: .
          paths: 
            - << parameters.driver_name >>/<< parameters.artifacts >>

jobs:
  linux:
    working_directory: ~/work
    docker:
      - image: raonigabriel/graalvm-playground:19.0.0
    environment: 
      _JAVA_OPTIONS: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Xms1000m -Xmx1436m -XX:MaxMetaspaceSize=1436m -XX:ParallelGCThreads=1 -XX:ConcGCThreads=1 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2"
    steps:
      - checkout
      - restore_cache:
          key: gdbc-linux-{{ checksum "wrapper/pom.xml" }}
      - build_driver:
          driver_name: postgresql
      - build_driver:
          driver_name: mssql
      - build_driver:
          driver_name: oracle
      - save_cache:
          paths:
            - ~/.m2
          key: gdbc-linux-{{ checksum "wrapper/pom.xml" }}

  mac:
    working_directory: ~/work
    macos:
      xcode: "10.0.0"
    steps:
      - checkout
      - restore_cache:
          key: gdbc-mac-{{ checksum "wrapper/pom.xml" }}
      - run: wrapper/setup-mac.sh
      - build_driver:
          driver_name: postgresql
          artifacts: libgdbc-postgresql.dylib
      - build_driver:
          driver_name: mssql
          artifacts: libgdbc-mssql.dylib
      - build_driver:
          driver_name: oracle
          artifacts: libgdbc-oracle.dylib
      - save_cache:
          paths:
            - ~/.m2
          key: gdbc-mac-{{ checksum "wrapper/pom.xml" }}
  
  commit_drivers:
    docker:
      - image: circleci/golang:latest
    steps:
      - checkout
      - attach_workspace:
           at: .
      - run: git config user.email "elliot@identitii.com"
      - run: git config user.name "Elliot Shepherd (CI)"
      - run: git status
      - run: git add .
      - run: git status
      - run: git commit -m "[auto] update packaged drivers [skip ci]"
      - run: git push --set-upstream origin ${CIRCLE_BRANCH}

workflows:
  version: 2
  build:
    jobs:
      - linux
      - mac
      - approve_release:
          type: approval
          requires:
            - linux
            - mac
      - commit_drivers:
          requires:
            - approve_release
